scrCheckForComponentsInOtherSolutions As screen:
    OnVisible: |-
        =Clear(colSolutionComponentsInMultipleSolutions);
        UpdateContext({loading: true});
        //Refresh('Solution Components');
        ClearCollect(
            colSolutionsNotSelected,
            {}
        );
        UpdateContext({selectedSolutionId: drpSolutions.Selected.'Solution Identifier'});
        Clear(colSolutionsNotSelected);
        ForAll(
            glrSolutions.AllItems,
            Collect(
                colSolutionsNotSelected,
                {SolutionId: 'Solution Identifier'}
            )
        );
        Remove(
            colSolutionsNotSelected,
            LookUp(
                colSolutionsNotSelected,
                SolutionId = selectedSolutionId
            )
        );
        ClearCollect(
            colSolutionComponentsInOtherSolutions,
            {}
        );
        Clear(colSolutionComponentsInOtherSolutions);
        ForAll(
            colSolutionsNotSelected,
            If(
                SolutionId <> gblDefaultSolutionId && SolutionId <> gblCdsDefaultSolutionId && SolutionId <> gblActiveSolutionId,
                Collect(
                    colSolutionComponentsInOtherSolutionsTemp,
                    Filter(
                        'Solution Components',
                        Solution.'Solution Identifier' = SolutionId
                    )
                )
            )
        );
        ClearCollect(
            colSolutionComponentsInOtherSolutions,
            ShowColumns(
                colSolutionComponentsInOtherSolutionsTemp,
                "componenttype",
                "objectid",
                "solutioncomponentid",
                "solutionid"
            )
        );
        ClearCollect(
            colSolutionComponentsInSelectedSolution,
            {}
        );
        Clear(colSolutionComponentsInSelectedSolution);
        Collect(
            colSolutionComponentsInSelectedSolution,
            ShowColumns(
                Filter(
                    'Solution Components',
                    Solution.'Solution Identifier' = drpSolutions.Selected.'Solution Identifier'
                ),
                "componenttype",
                "objectid",
                "solutioncomponentid",
                "solutionid"
            )
        );
        ClearCollect(
            colSolutionComponentsInMultipleSolutions,
            DropColumns(
                Filter(
                    Ungroup(
                        AddColumns(
                            RenameColumns(
                                colSolutionComponentsInSelectedSolution,
                                "objectid",
                                "selectedobjectid",
                                "solutioncomponentid",
                                "selectedsolutioncomponentid",
                                "solutionid",
                                "selectedsolutionid",
                                "componenttype",
                                "selectedcomponenttype"
                            ) As is,
                            "temp",
                            Filter(
                                colSolutionComponentsInOtherSolutions,
                                objectid = is.selectedobjectid
                            )
                        ),
                        "temp"
                    ),
                    !IsBlank(ThisRecord.objectid)
                ),
                "selectedobjectid",
                "selectedsolutioncomponentid",
                "selectedsolutionid",
                "selectedcomponenttype"
            )
        );
        Clear(colSolutionComponentsInOtherSolutionsTemp);
        Clear(colSolutionComponentsInOtherSolutions);
        Clear(colSolutionComponentsInSelectedSolution);
        ClearCollect(
            colObjectIdDisplayName,
            {}
        );
        Clear(colObjectIdDisplayName);
        ForAll(
            colSolutionComponentsInMultipleSolutions As ims,
            Collect(
                colObjectIdDisplayName,
                GetSolutionComponentName.Run(ims.objectid)
            )
        );
        UpdateContext({loading: false});

    lblCheckOtherUnmanaged As label:
        Height: =43
        Text: ="Checking to see if the Solution has components in other unmanaged Solutions."
        Visible: =loading
        Width: =657
        X: =40
        Y: =40
        ZIndex: =1

    "glrDuplicateResults As gallery.'BrowseLayout_Vertical_TwoTextVariant_ver4.0'":
        Height: =685
        Items: =colSolutionComponentsInMultipleSolutions
        Layout: =Layout.Vertical
        TemplatePadding: =0
        TemplateSize: =Min(104, Self.Height - 60)
        Visible: =!lblCheckOtherUnmanaged.Visible
        Width: =686
        X: =40
        Y: =83
        ZIndex: =1

        Title2 As label:
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =LookUp(colObjectIdDisplayName, msdyn_objectid = Text(ThisItem.objectid), msdyn_displayname)
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.TemplateWidth - 104
            X: =32
            Y: =16
            ZIndex: =1

        Subtitle2 As label:
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.solutionid.Name
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.TemplateWidth - 104
            X: =32
            Y: =Title2.Y + Title2.Height + 4
            ZIndex: =2

        NextArrow2 As icon.ChevronRight:
            AccessibleLabel: =Self.Tooltip
            Height: =60
            Icon: =Icon.ChevronRight
            OnSelect: =Select(Parent)
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            TabIndex: =0
            Tooltip: ="View item details"
            Width: =60
            X: =Parent.TemplateWidth - Self.Width - 5
            Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
            ZIndex: =3

        Separator2 As rectangle:
            Height: =1
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =Parent.TemplateHeight - 1
            ZIndex: =4

    imgFindDuplicatesInUnmanagedSolution As image:
        Image: =imgLoading
        ImagePosition: =ImagePosition.Fill
        Visible: =loading
        X: =697
        Y: =11
        ZIndex: =2

    lblDeleteDuplicatesInUnmanagedSolution As label:
        Height: =184
        Text: ="Your Solution has components also in other unmanaged Solutions.  Review the list.  Are you familiar with all the other Solutions? If not, please coordinate with Solution owners to address issues causing this.  For example, if the component is a connection reference you may want to point flows in other Solutions to a different connection reference.  If you are familiar and confident this is safe, would you like to remove the components from all other unmanaged solutions?"
        Visible: =!loading && CountRows(glrDuplicateResults.AllItems) > 0
        Width: =530
        X: =836
        ZIndex: =3

    btnDeleteDuplicatesInUnmanagedSolutions As button:
        OnSelect: |
            =UpdateContext({deleting: true});
            ClearCollect(
                colRemoveFromUnmanagedSolutionsDTO,
                AddColumns(
                    colSolutionComponentsInMultipleSolutions,
                    "solutionuniquename",
                    solutionid.Name,
                    "solutionid2",
                    solutionid.'Solution Identifier'
                )
            );
            If(
                RemoveFromUnmanagedSolutionsCustomAPI.Run(JSON(colRemoveFromUnmanagedSolutionsDTO)).response = "success",
                UpdateContext({loading: true});
                Navigate(scrMain)
            );
            UpdateContext({deleting: false});
            Clear(colRemoveFromUnmanagedSolutionsDTO);
        Text: ="Yes"
        Visible: =!loading && CountRows(glrDuplicateResults.AllItems) > 0
        X: =836
        Y: =200
        ZIndex: =4

    imgFindDuplicatesInUnmanagedSolutionRunning As image:
        Image: =imgLoading
        ImagePosition: =ImagePosition.Fill
        Visible: =deleting
        X: =1007
        Y: =170
        ZIndex: =5

    lblStartOver As label:
        Height: =62
        Text: ="Your Solution is self contained and ready for export. Would you like to start over?"
        Visible: =!loading && CountRows(glrDuplicateResults.AllItems) = 0
        Width: =530
        X: =836
        Y: =224
        ZIndex: =6

    btnStartOver As button:
        OnSelect: =Navigate(scrMain)
        Text: ="Yes"
        Visible: =!loading && CountRows(glrDuplicateResults.AllItems) = 0
        X: =836
        Y: =286
        ZIndex: =7

